
motorDriveTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000032c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000380  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  000003f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000eef  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000366  00000000  00000000  000013b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a0  00000000  00000000  0000171d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000015c  00000000  00000000  00001bc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000086a  00000000  00000000  00001d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000015d  00000000  00000000  00002586  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  000026e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
   8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
   c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  10:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  14:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  18:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  1c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  20:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  24:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  28:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  2c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  30:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  34:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  38:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  3c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  40:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  44:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  48:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  4c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  50:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  54:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  58:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  5c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  60:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  64:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  68:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  6c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  70:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  74:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  78:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  7c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  80:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  84:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  88:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  8c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  90:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  94:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  98:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  9c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  a0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  a4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  a8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  ac:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  b0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  b4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  b8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  bc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  c0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  c4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  c8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  cc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  d0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  d4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  d8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  dc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  e0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  e4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  e8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  ec:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  f0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  f4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  f8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  fc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 100:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 104:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 108:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 10c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 110:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 114:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 118:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 11c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 120:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 124:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 128:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 12c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 130:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 134:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 138:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 13c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 140:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 144:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 148:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 14c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 150:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 154:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 158:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 15c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 160:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 164:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 168:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 16c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 170:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 174:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 178:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 17c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 180:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 184:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 188:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 18c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 190:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 194:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 198:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 19c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1a0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1a4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1a8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1ac:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1b0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1b4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1b8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1bc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1c0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1c4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1c8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1cc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1d0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1d4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1d8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1dc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1e0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1e4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1e8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1ec:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1f0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1f4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1f8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e5       	ldi	r29, 0x5F	; 95
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <main>
 210:	0c 94 94 01 	jmp	0x328	; 0x328 <_exit>

00000214 <__bad_interrupt>:
 214:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000218 <led_init>:
PB2 - CMD
 */

void led_init()
{
	PORTA.OUTSET = 0xFF;
 218:	e0 e0       	ldi	r30, 0x00	; 0
 21a:	f6 e0       	ldi	r31, 0x06	; 6
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	85 83       	std	Z+5, r24	; 0x05
	PORTA.DIRSET = 0xFF;
 220:	81 83       	std	Z+1, r24	; 0x01

	PORTB.OUTSET = 0x07;
 222:	e0 e2       	ldi	r30, 0x20	; 32
 224:	f6 e0       	ldi	r31, 0x06	; 6
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	85 83       	std	Z+5, r24	; 0x05
	PORTB.DIRSET = 0x07;
 22a:	81 83       	std	Z+1, r24	; 0x01
 22c:	08 95       	ret

0000022e <led_dataOut>:
	PORTB.OUTTGL = ALIVE_MASK;
}

void led_dataOut(uint8_t value)
{
	PORTA.OUT = ~value;
 22e:	80 95       	com	r24
 230:	80 93 04 06 	sts	0x0604, r24
 234:	08 95       	ret

00000236 <motor_init>:
/* Uses TimerC0 and TimerD0
 */
void motor_init()
{
	//Initializing Motor0
	PORTC.DIRSET = 0x0F;
 236:	5f e0       	ldi	r21, 0x0F	; 15
 238:	50 93 41 06 	sts	0x0641, r21
	TCC0.CTRLB = TC_WGMODE_DS_T_gc; //Chose 'top' arbitrarily
 23c:	e0 e0       	ldi	r30, 0x00	; 0
 23e:	f8 e0       	ldi	r31, 0x08	; 8
 240:	45 e0       	ldi	r20, 0x05	; 5
 242:	41 83       	std	Z+1, r20	; 0x01
	TCC0.CTRLB |= TC0_CCBEN_bm | TC0_CCDEN_bm;
 244:	81 81       	ldd	r24, Z+1	; 0x01
 246:	80 6a       	ori	r24, 0xA0	; 160
 248:	81 83       	std	Z+1, r24	; 0x01
	TCC0.PER = 0xFF; //Shortening to 1 byte
 24a:	2f ef       	ldi	r18, 0xFF	; 255
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	26 a3       	std	Z+38, r18	; 0x26
 250:	37 a3       	std	Z+39, r19	; 0x27
	TCC0.CTRLA = TC_CLKSEL_DIV8_gc;
 252:	94 e0       	ldi	r25, 0x04	; 4
 254:	90 83       	st	Z, r25

	//Initializing Motor1
	PORTD.DIRSET = 0x0F;
 256:	50 93 61 06 	sts	0x0661, r21
	TCD0.CTRLB = TC_WGMODE_DS_T_gc;
 25a:	e0 e0       	ldi	r30, 0x00	; 0
 25c:	f9 e0       	ldi	r31, 0x09	; 9
 25e:	41 83       	std	Z+1, r20	; 0x01
	TCD0.CTRLB |= TC0_CCBEN_bm | TC0_CCDEN_bm;
 260:	81 81       	ldd	r24, Z+1	; 0x01
 262:	80 6a       	ori	r24, 0xA0	; 160
 264:	81 83       	std	Z+1, r24	; 0x01
	TCD0.PER = 0xFF; //Shortening to 1 byte
 266:	26 a3       	std	Z+38, r18	; 0x26
 268:	37 a3       	std	Z+39, r19	; 0x27
	TCD0.CTRLA = TC_CLKSEL_DIV8_gc;
 26a:	90 83       	st	Z, r25
 26c:	08 95       	ret

0000026e <motor0_set>:
}

void motor0_set(int8_t value)
{
	if(value > 0)
 26e:	18 16       	cp	r1, r24
 270:	d4 f4       	brge	.+52     	; 0x2a6 <motor0_set+0x38>
	{
		//Commanded Phase A
		PORTC.OUTCLR = PIN2_bm; //Disable BHI
 272:	a0 e4       	ldi	r26, 0x40	; 64
 274:	b6 e0       	ldi	r27, 0x06	; 6
 276:	94 e0       	ldi	r25, 0x04	; 4
 278:	16 96       	adiw	r26, 0x06	; 6
 27a:	9c 93       	st	X, r25
 27c:	16 97       	sbiw	r26, 0x06	; 6
		TCC0.CCB = 0;			//Hold ALO low
 27e:	e0 e0       	ldi	r30, 0x00	; 0
 280:	f8 e0       	ldi	r31, 0x08	; 8
 282:	12 a6       	std	Z+42, r1	; 0x2a
 284:	13 a6       	std	Z+43, r1	; 0x2b
		TCC0.CNT = TCC0.PER;
 286:	26 a1       	ldd	r18, Z+38	; 0x26
 288:	37 a1       	ldd	r19, Z+39	; 0x27
 28a:	20 a3       	std	Z+32, r18	; 0x20
 28c:	31 a3       	std	Z+33, r19	; 0x21

		uint8_t pwmVal = (uint8_t)value*2;
 28e:	88 0f       	add	r24, r24
		TCC0.CCD = pwmVal;		//Set BLO pwm
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	86 a7       	std	Z+46, r24	; 0x2e
 294:	97 a7       	std	Z+47, r25	; 0x2f
		TCC0.CNT = TCC0.PER;
 296:	86 a1       	ldd	r24, Z+38	; 0x26
 298:	97 a1       	ldd	r25, Z+39	; 0x27
 29a:	80 a3       	std	Z+32, r24	; 0x20
 29c:	91 a3       	std	Z+33, r25	; 0x21
		PORTC.OUTSET = PIN0_bm; //Set AHI
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	15 96       	adiw	r26, 0x05	; 5
 2a2:	8c 93       	st	X, r24
 2a4:	08 95       	ret
	}
	else
	{
		//Commanded Phase B
		if(value == -128)
 2a6:	80 38       	cpi	r24, 0x80	; 128
 2a8:	09 f4       	brne	.+2      	; 0x2ac <motor0_set+0x3e>
		{
			value = -127;
 2aa:	81 e8       	ldi	r24, 0x81	; 129
		}
		value*=-1;

		PORTC.OUTCLR = PIN0_bm;	//Clear AHI
 2ac:	a0 e4       	ldi	r26, 0x40	; 64
 2ae:	b6 e0       	ldi	r27, 0x06	; 6
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	16 96       	adiw	r26, 0x06	; 6
 2b4:	9c 93       	st	X, r25
 2b6:	16 97       	sbiw	r26, 0x06	; 6
		TCC0.CCD = 0;			//Hold BLO low
 2b8:	e0 e0       	ldi	r30, 0x00	; 0
 2ba:	f8 e0       	ldi	r31, 0x08	; 8
 2bc:	16 a6       	std	Z+46, r1	; 0x2e
 2be:	17 a6       	std	Z+47, r1	; 0x2f
		TCC0.CNT = TCC0.PER;
 2c0:	26 a1       	ldd	r18, Z+38	; 0x26
 2c2:	37 a1       	ldd	r19, Z+39	; 0x27
 2c4:	20 a3       	std	Z+32, r18	; 0x20
 2c6:	31 a3       	std	Z+33, r19	; 0x21
		//Commanded Phase B
		if(value == -128)
		{
			value = -127;
		}
		value*=-1;
 2c8:	81 95       	neg	r24

		PORTC.OUTCLR = PIN0_bm;	//Clear AHI
		TCC0.CCD = 0;			//Hold BLO low
		TCC0.CNT = TCC0.PER;

		uint8_t pwmVal = (uint8_t)value*2;
 2ca:	88 0f       	add	r24, r24
		TCC0.CCB = pwmVal;		//Set ALO pwm
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	82 a7       	std	Z+42, r24	; 0x2a
 2d0:	93 a7       	std	Z+43, r25	; 0x2b
		TCC0.CNT = TCC0.PER;
 2d2:	86 a1       	ldd	r24, Z+38	; 0x26
 2d4:	97 a1       	ldd	r25, Z+39	; 0x27
 2d6:	80 a3       	std	Z+32, r24	; 0x20
 2d8:	91 a3       	std	Z+33, r25	; 0x21
		PORTC.OUTSET = PIN2_bm;
 2da:	84 e0       	ldi	r24, 0x04	; 4
 2dc:	15 96       	adiw	r26, 0x05	; 5
 2de:	8c 93       	st	X, r24
 2e0:	08 95       	ret

000002e2 <main>:
#include "led.h"
#include "sysClock.h"

int main(void)
{
	motor_init();
 2e2:	0e 94 1b 01 	call	0x236	; 0x236 <motor_init>
	led_init();
 2e6:	0e 94 0c 01 	call	0x218	; 0x218 <led_init>

	*/
	//HARDCORE TEST
    while (1) 
    {
		led_dataOut(1);
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	0e 94 17 01 	call	0x22e	; 0x22e <led_dataOut>
		motor0_set(127);
 2f0:	8f e7       	ldi	r24, 0x7F	; 127
 2f2:	0e 94 37 01 	call	0x26e	; 0x26e <motor0_set>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f6:	2f e7       	ldi	r18, 0x7F	; 127
 2f8:	8a e1       	ldi	r24, 0x1A	; 26
 2fa:	96 e0       	ldi	r25, 0x06	; 6
 2fc:	21 50       	subi	r18, 0x01	; 1
 2fe:	80 40       	sbci	r24, 0x00	; 0
 300:	90 40       	sbci	r25, 0x00	; 0
 302:	e1 f7       	brne	.-8      	; 0x2fc <main+0x1a>
 304:	00 c0       	rjmp	.+0      	; 0x306 <main+0x24>
 306:	00 00       	nop
		//motor1_set(64);
		_delay_ms(1000);

		led_dataOut(2);
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	0e 94 17 01 	call	0x22e	; 0x22e <led_dataOut>
		motor0_set(-127);
 30e:	81 e8       	ldi	r24, 0x81	; 129
 310:	0e 94 37 01 	call	0x26e	; 0x26e <motor0_set>
 314:	2f e7       	ldi	r18, 0x7F	; 127
 316:	8a e1       	ldi	r24, 0x1A	; 26
 318:	96 e0       	ldi	r25, 0x06	; 6
 31a:	21 50       	subi	r18, 0x01	; 1
 31c:	80 40       	sbci	r24, 0x00	; 0
 31e:	90 40       	sbci	r25, 0x00	; 0
 320:	e1 f7       	brne	.-8      	; 0x31a <main+0x38>
 322:	00 c0       	rjmp	.+0      	; 0x324 <main+0x42>
 324:	00 00       	nop
 326:	e1 cf       	rjmp	.-62     	; 0x2ea <main+0x8>

00000328 <_exit>:
 328:	f8 94       	cli

0000032a <__stop_program>:
 32a:	ff cf       	rjmp	.-2      	; 0x32a <__stop_program>
